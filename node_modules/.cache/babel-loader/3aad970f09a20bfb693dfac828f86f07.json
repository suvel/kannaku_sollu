{"ast":null,"code":"var _jsxFileName = \"F:\\\\JS Projects\\\\client\\\\kannaku_sollu\\\\src\\\\component\\\\Step3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./Step3.scss\";\nimport Table from \"./Table\";\nimport Button from \"./Button\";\nimport { AppContext, reducerActTypes } from \"../context/AppProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Step3 = ({\n  toggleAddToBillModal\n}) => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const columns = React.useMemo(() => [{\n    Header: \"MEMBER\",\n    accessor: \"memName\"\n  }, {\n    Header: \"PROD EXP\",\n    accessor: \"prodExp\"\n  }, {\n    Header: \"TOTAL\",\n    accessor: \"total\"\n  }], []);\n\n  const calculateTotal = (expStr, products) => {\n    const items = expStr.split(\"+\");\n    let sum = 0;\n    items.forEach(item => {\n      const [qty, prd] = item.split(\"x\");\n      debugger;\n      const prdCost = products.find(product => product.icon == prd).prdPrice;\n      sum = sum + qty * prdCost;\n    });\n  };\n\n  const handelBillingRefresh = () => {\n    const curMembers = state.members;\n    const curProducts = state.products;\n    const shares = state.shares;\n    let newShares = []; //removing unavailable members\n\n    shares.forEach(share => {\n      const memberExist = curMembers.find(mem => mem.id === share.memId);\n\n      if (memberExist) {\n        newShares.push({ ...share\n        });\n      }\n    }); //clearing unavailable products\n\n    newShares.forEach(share => {\n      const productExpString = share.prodExp;\n      const productsInExp = productExpString.split(\"+\");\n      let newProdExp = [];\n      productsInExp.forEach(prod => {\n        const [qty, prd] = prod.split(\"x\");\n        const prdExist = curProducts.find(prod => prod.icon === prd);\n\n        if (prdExist) {\n          newProdExp.push(prod);\n        }\n      });\n      share.prodExp = newProdExp.join(\"+\");\n      share.total = calculateTotal(share.prodExp, curProducts);\n    });\n    dispatch({\n      type: reducerActTypes.SET_SHARE,\n      value: newShares\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"step3\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      name: \"Refresh\",\n      variant: \"outlined\",\n      onClick: handelBillingRefresh\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: state === null || state === void 0 ? void 0 : state.shares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step3__action\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => toggleAddToBillModal(true),\n        name: \"Add\",\n        variant: \"solid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Step3, \"CKfQK6Bx0z3q5lfKekwyue6pvII=\");\n\n_c = Step3;\nexport default Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/component/Step3.js"],"names":["React","useContext","Table","Button","AppContext","reducerActTypes","Step3","toggleAddToBillModal","state","dispatch","columns","useMemo","Header","accessor","calculateTotal","expStr","products","items","split","sum","forEach","item","qty","prd","prdCost","find","product","icon","prdPrice","handelBillingRefresh","curMembers","members","curProducts","shares","newShares","share","memberExist","mem","id","memId","push","productExpString","prodExp","productsInExp","newProdExp","prod","prdExist","join","total","type","SET_SHARE","value"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport \"./Step3.scss\";\nimport Table from \"./Table\";\nimport Button from \"./Button\";\nimport { AppContext, reducerActTypes } from \"../context/AppProvider\";\n\nconst Step3 = ({ toggleAddToBillModal }) => {\n  const { state, dispatch } = useContext(AppContext);\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"MEMBER\",\n        accessor: \"memName\",\n      },\n      {\n        Header: \"PROD EXP\",\n        accessor: \"prodExp\",\n      },\n      {\n        Header: \"TOTAL\",\n        accessor: \"total\",\n      },\n    ],\n    []\n  );\n\n  const calculateTotal = (expStr, products) => {\n    const items = expStr.split(\"+\");\n    let sum = 0;\n\n    items.forEach((item) => {\n      const [qty, prd] = item.split(\"x\");\n      debugger;\n      const prdCost = products.find((product) => product.icon == prd).prdPrice;\n      sum = sum + qty * prdCost;\n    });\n  };\n\n  const handelBillingRefresh = () => {\n    const curMembers = state.members;\n    const curProducts = state.products;\n    const shares = state.shares;\n\n    let newShares = [];\n\n    //removing unavailable members\n    shares.forEach((share) => {\n      const memberExist = curMembers.find((mem) => mem.id === share.memId);\n      if (memberExist) {\n        newShares.push({\n          ...share,\n        });\n      }\n    });\n\n    //clearing unavailable products\n    newShares.forEach((share) => {\n      const productExpString = share.prodExp;\n      const productsInExp = productExpString.split(\"+\");\n\n      let newProdExp = [];\n\n      productsInExp.forEach((prod) => {\n        const [qty, prd] = prod.split(\"x\");\n        const prdExist = curProducts.find((prod) => prod.icon === prd);\n        if (prdExist) {\n          newProdExp.push(prod);\n        }\n      });\n\n      share.prodExp = newProdExp.join(\"+\");\n      share.total = calculateTotal(share.prodExp, curProducts);\n    });\n\n    dispatch({ type: reducerActTypes.SET_SHARE, value: newShares });\n  };\n\n  return (\n    <div className=\"step3\">\n      <Button\n        name={\"Refresh\"}\n        variant={\"outlined\"}\n        onClick={handelBillingRefresh}\n      />\n      <Table columns={columns} data={state?.shares} />\n      <div className=\"step3__action\">\n        <Button\n          onClick={() => toggleAddToBillModal(true)}\n          name={\"Add\"}\n          variant={\"solid\"}\n        />\n        {/* <Button name={\"Remove\"} variant={\"outlined\"} /> */}\n      </div>\n    </div>\n  );\n};\nexport default Step3;\n"]},"metadata":{},"sourceType":"module"}