{"ast":null,"code":"import _objectSpread from\"F:/JS Projects/client/kannaku_sollu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useTable}from\"react-table\";import\"./Table.scss\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var getDataUpdated=function getDataUpdated(dataArr){return dataArr.map(function(data,index){return _objectSpread(_objectSpread({},data),{},{sno:index+1});});};function Table(_ref){var columns=_ref.columns,data=_ref.data,style=_ref.style;columns.unshift({Header:\"#\",accessor:\"sno\"});var _useTable=useTable({columns:columns,data:getDataUpdated(data)}),getTableProps=_useTable.getTableProps,getTableBodyProps=_useTable.getTableBodyProps,headerGroups=_useTable.headerGroups,rows=_useTable.rows,prepareRow=_useTable.prepareRow;return/*#__PURE__*/_jsxs(\"table\",_objectSpread(_objectSpread({style:style},getTableProps()),{},{children:[/*#__PURE__*/_jsx(\"thead\",{children:headerGroups.map(function(headerGroup){return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},headerGroup.getHeaderGroupProps()),{},{children:headerGroup.headers.map(function(column){return/*#__PURE__*/_jsx(\"th\",_objectSpread(_objectSpread({},column.getHeaderProps()),{},{children:column.render(\"Header\")}));})}));})}),/*#__PURE__*/_jsx(\"tbody\",_objectSpread(_objectSpread({},getTableBodyProps()),{},{children:rows.map(function(row,i){prepareRow(row);return/*#__PURE__*/_jsx(\"tr\",_objectSpread(_objectSpread({},row.getRowProps()),{},{children:row.cells.map(function(cell){return/*#__PURE__*/_jsx(\"td\",_objectSpread(_objectSpread({},cell.getCellProps()),{},{children:cell.render(\"Cell\")}));})}));})}))]}));}export default Table;","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/component/Table.js"],"names":["useTable","getDataUpdated","dataArr","map","data","index","sno","Table","columns","style","unshift","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"yJAAA,OAASA,QAAT,KAAyB,aAAzB,CACA,MAAO,cAAP,C,wFAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,OAAD,CAAa,CAClC,MAAOA,CAAAA,OAAO,CAACC,GAAR,CAAY,SAACC,IAAD,CAAOC,KAAP,wCAAuBD,IAAvB,MAA6BE,GAAG,CAAED,KAAK,CAAG,CAA1C,IAAZ,CAAP,CACD,CAFD,CAIA,QAASE,CAAAA,KAAT,MAAyC,IAAxBC,CAAAA,OAAwB,MAAxBA,OAAwB,CAAfJ,IAAe,MAAfA,IAAe,CAATK,KAAS,MAATA,KAAS,CACvCD,OAAO,CAACE,OAAR,CAAgB,CACdC,MAAM,CAAE,GADM,CAEdC,QAAQ,CAAE,KAFI,CAAhB,EAKA,cACEZ,QAAQ,CAAC,CACPQ,OAAO,CAAEA,OADF,CAEPJ,IAAI,CAAEH,cAAc,CAACG,IAAD,CAFb,CAAD,CADV,CAAQS,aAAR,WAAQA,aAAR,CAAuBC,iBAAvB,WAAuBA,iBAAvB,CAA0CC,YAA1C,WAA0CA,YAA1C,CAAwDC,IAAxD,WAAwDA,IAAxD,CAA8DC,UAA9D,WAA8DA,UAA9D,CAMA,mBACE,2CAAO,KAAK,CAAER,KAAd,EAAyBI,aAAa,EAAtC,6BACE,uBACGE,YAAY,CAACZ,GAAb,CAAiB,SAACe,WAAD,qBAChB,yCAAQA,WAAW,CAACC,mBAAZ,EAAR,eACGD,WAAW,CAACE,OAAZ,CAAoBjB,GAApB,CAAwB,SAACkB,MAAD,qBACvB,yCAAQA,MAAM,CAACC,cAAP,EAAR,eAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd,CAAlC,GADuB,EAAxB,CADH,GADgB,EAAjB,CADH,EADF,cAUE,4CAAWT,iBAAiB,EAA5B,eACGE,IAAI,CAACb,GAAL,CAAS,SAACqB,GAAD,CAAMC,CAAN,CAAY,CACpBR,UAAU,CAACO,GAAD,CAAV,CACA,mBACE,yCAAQA,GAAG,CAACE,WAAJ,EAAR,eACGF,GAAG,CAACG,KAAJ,CAAUxB,GAAV,CAAc,SAACyB,IAAD,CAAU,CACvB,mBAAO,yCAAQA,IAAI,CAACC,YAAL,EAAR,eAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ,CAA9B,GAAP,CACD,CAFA,CADH,GADF,CAOD,CATA,CADH,GAVF,IADF,CAyBD,CAED,cAAehB,CAAAA,KAAf","sourcesContent":["import { useTable } from \"react-table\";\r\nimport \"./Table.scss\";\r\n\r\nconst getDataUpdated = (dataArr) => {\r\n  return dataArr.map((data, index) => ({ ...data, sno: index + 1 }));\r\n};\r\n\r\nfunction Table({ columns, data, style }) {\r\n  columns.unshift({\r\n    Header: \"#\",\r\n    accessor: \"sno\",\r\n  });\r\n\r\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n    useTable({\r\n      columns: columns,\r\n      data: getDataUpdated(data),\r\n    });\r\n\r\n  return (\r\n    <table style={style} {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map((headerGroup) => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map((column) => (\r\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map((cell) => {\r\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\r\n              })}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}