{"ast":null,"code":"import _slicedToArray from\"F:/JS Projects/client/kannaku_sollu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/*\r\ncalculateTotal is used for calculating the total cost that a member has to pay. \r\nThe function takes two arguments: expStr and products.\r\n\r\nexapmle:\r\nexpStr = '1x🍎+2x🚬'\r\nproducts = [\r\n    {\r\n        \"id\": \"l1n5l9ap\",\r\n        \"icon\": \"🍪\",\r\n        \"prdName\": \"Butter Biscuit\",\r\n        \"prdPrice\": \"10\"\r\n    },\r\n    {\r\n        \"id\": \"l1n5l9aq\",\r\n        \"icon\": \"🍎\",\r\n        \"prdName\": \"Apple\",\r\n        \"prdPrice\": \"20\"\r\n    },\r\n    {\r\n        \"id\": \"l1n5l9ar\",\r\n        \"icon\": \"🚬\",\r\n        \"prdName\": \"Cigaret\",\r\n        \"prdPrice\": \"18\"\r\n    },\r\n]\r\n*/var calculateTotal=function calculateTotal(expStr,products){var items=expStr.split(\"+\");var sum=0;items.forEach(function(item){if(item!==\"\"){var _item$split=item.split(\"x\"),_item$split2=_slicedToArray(_item$split,2),qty=_item$split2[0],prd=_item$split2[1];debugger;var prdCost=products.find(function(product){return product.icon==prd;}).prdPrice;sum=sum+qty*prdCost;}});return sum;};export default calculateTotal;","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/functions/calculateTotal.js"],"names":["calculateTotal","expStr","products","items","split","sum","forEach","item","qty","prd","prdCost","find","product","icon","prdPrice"],"mappings":"0JAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GAAMA,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,MAAD,CAASC,QAAT,CAAsB,CAC3C,GAAMC,CAAAA,KAAK,CAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAd,CACA,GAAIC,CAAAA,GAAG,CAAG,CAAV,CACAF,KAAK,CAACG,OAAN,CAAc,SAACC,IAAD,CAAU,CACtB,GAAIA,IAAI,GAAK,EAAb,CAAiB,CACf,gBAAmBA,IAAI,CAACH,KAAL,CAAW,GAAX,CAAnB,4CAAOI,GAAP,iBAAYC,GAAZ,iBACA,SACA,GAAMC,CAAAA,OAAO,CAAGR,QAAQ,CAACS,IAAT,CAAc,SAACC,OAAD,QAAaA,CAAAA,OAAO,CAACC,IAAR,EAAgBJ,GAA7B,EAAd,EAAgDK,QAAhE,CACAT,GAAG,CAAGA,GAAG,CAAGG,GAAG,CAAGE,OAAlB,CACD,CACF,CAPD,EAQA,MAAOL,CAAAA,GAAP,CACD,CAZD,CAcA,cAAeL,CAAAA,cAAf","sourcesContent":["/*\r\ncalculateTotal is used for calculating the total cost that a member has to pay. \r\nThe function takes two arguments: expStr and products.\r\n\r\nexapmle:\r\nexpStr = '1x🍎+2x🚬'\r\nproducts = [\r\n    {\r\n        \"id\": \"l1n5l9ap\",\r\n        \"icon\": \"🍪\",\r\n        \"prdName\": \"Butter Biscuit\",\r\n        \"prdPrice\": \"10\"\r\n    },\r\n    {\r\n        \"id\": \"l1n5l9aq\",\r\n        \"icon\": \"🍎\",\r\n        \"prdName\": \"Apple\",\r\n        \"prdPrice\": \"20\"\r\n    },\r\n    {\r\n        \"id\": \"l1n5l9ar\",\r\n        \"icon\": \"🚬\",\r\n        \"prdName\": \"Cigaret\",\r\n        \"prdPrice\": \"18\"\r\n    },\r\n]\r\n*/\r\n\r\nconst calculateTotal = (expStr, products) => {\r\n  const items = expStr.split(\"+\");\r\n  let sum = 0;\r\n  items.forEach((item) => {\r\n    if (item !== \"\") {\r\n      const [qty, prd] = item.split(\"x\");\r\n      debugger;\r\n      const prdCost = products.find((product) => product.icon == prd).prdPrice;\r\n      sum = sum + qty * prdCost;\r\n    }\r\n  });\r\n  return sum;\r\n};\r\n\r\nexport default calculateTotal;\r\n"]},"metadata":{},"sourceType":"module"}