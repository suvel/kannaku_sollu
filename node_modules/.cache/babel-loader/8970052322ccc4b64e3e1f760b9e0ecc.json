{"ast":null,"code":"var _jsxFileName = \"F:\\\\JS Projects\\\\client\\\\kannaku_sollu\\\\src\\\\component\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport { useTable } from \"react-table\";\nimport \"./Table.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getDataUpdated = dataArr => {\n  return dataArr.map((data, index) => ({ ...data,\n    sno: index + 1\n  }));\n};\n\nfunction Table({\n  columns,\n  data,\n  style\n}) {\n  _s();\n\n  columns.unshift({\n    Header: \"#\",\n    accessor: \"sno\"\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns: columns,\n    data: getDataUpdated(data)\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    style: style,\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n          children: column.render(\"Header\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n      children: rows.map((row, i) => {\n        prepareRow(row);\n        return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n          children: row.cells.map(cell => {\n            return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n              children: cell.render(\"Cell\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 24\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/component/Table.js"],"names":["useTable","getDataUpdated","dataArr","map","data","index","sno","Table","columns","style","unshift","Header","accessor","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,OAAO,cAAP;;;AAEA,MAAMC,cAAc,GAAIC,OAAD,IAAa;AAClC,SAAOA,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,MAAkB,EAAE,GAAGD,IAAL;AAAWE,IAAAA,GAAG,EAAED,KAAK,GAAG;AAAxB,GAAlB,CAAZ,CAAP;AACD,CAFD;;AAIA,SAASE,KAAT,CAAe;AAAEC,EAAAA,OAAF;AAAWJ,EAAAA,IAAX;AAAiBK,EAAAA;AAAjB,CAAf,EAAyC;AAAA;;AACvCD,EAAAA,OAAO,CAACE,OAAR,CAAgB;AACdC,IAAAA,MAAM,EAAE,GADM;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAAhB;AAKA,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA,YAApC;AAAkDC,IAAAA,IAAlD;AAAwDC,IAAAA;AAAxD,MACJjB,QAAQ,CAAC;AACPQ,IAAAA,OAAO,EAAEA,OADF;AAEPJ,IAAAA,IAAI,EAAEH,cAAc,CAACG,IAAD;AAFb,GAAD,CADV;AAMA,sBACE;AAAO,IAAA,KAAK,EAAEK,KAAd;AAAA,OAAyBI,aAAa,EAAtC;AAAA,4BACE;AAAA,gBACGE,YAAY,CAACZ,GAAb,CAAkBe,WAAD,iBAChB,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,kBACGD,WAAW,CAACE,OAAZ,CAAoBjB,GAApB,CAAyBkB,MAAD,iBACvB,mBAAQA,MAAM,CAACC,cAAP,EAAR;AAAA,oBAAkCD,MAAM,CAACE,MAAP,CAAc,QAAd;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,sBAAWT,iBAAiB,EAA5B;AAAA,gBACGE,IAAI,CAACb,GAAL,CAAS,CAACqB,GAAD,EAAMC,CAAN,KAAY;AACpBR,QAAAA,UAAU,CAACO,GAAD,CAAV;AACA,4BACE,mBAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA,oBACGF,GAAG,CAACG,KAAJ,CAAUxB,GAAV,CAAeyB,IAAD,IAAU;AACvB,gCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,wBAA8BD,IAAI,CAACL,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GArCQhB,K;UAOLP,Q;;;KAPKO,K;AAuCT,eAAeA,KAAf","sourcesContent":["import { useTable } from \"react-table\";\nimport \"./Table.scss\";\n\nconst getDataUpdated = (dataArr) => {\n  return dataArr.map((data, index) => ({ ...data, sno: index + 1 }));\n};\n\nfunction Table({ columns, data, style }) {\n  columns.unshift({\n    Header: \"#\",\n    accessor: \"sno\",\n  });\n\n  const { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\n    useTable({\n      columns: columns,\n      data: getDataUpdated(data),\n    });\n\n  return (\n    <table style={style} {...getTableProps()}>\n      <thead>\n        {headerGroups.map((headerGroup) => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map((column) => (\n              <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {rows.map((row, i) => {\n          prepareRow(row);\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map((cell) => {\n                return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}