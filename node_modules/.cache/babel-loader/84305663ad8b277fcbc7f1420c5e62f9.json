{"ast":null,"code":"/*\r\ncalculateTotal is used for calculating the total cost that a member has to pay. \r\nThe function takes two arguments: expStr and products.\r\n\r\nexapmle:\r\nexpStr = \"1xA+2xB+3xC\"\r\nproducts = [{icon: \"A\", prdPrice: 10}, {icon: \"B\", prdPrice: 20}, {icon: \"C\", prdPrice: 30}]\r\n*/\nconst calculateTotal = (expStr, products) => {\n  debugger;\n  const items = expStr.split(\"+\");\n  let sum = 0;\n  items.forEach(item => {\n    const [qty, prd] = item.split(\"x\");\n    const prdCost = products.find(product => product.icon == prd).prdPrice;\n    sum = sum + qty * prdCost;\n  });\n  return sum;\n};\n\nexport default calculateTotal;","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/functions/calculateTotal.js"],"names":["calculateTotal","expStr","products","items","split","sum","forEach","item","qty","prd","prdCost","find","product","icon","prdPrice"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,cAAc,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AAC3C;AACA,QAAMC,KAAK,GAAGF,MAAM,CAACG,KAAP,CAAa,GAAb,CAAd;AACA,MAAIC,GAAG,GAAG,CAAV;AAEAF,EAAAA,KAAK,CAACG,OAAN,CAAeC,IAAD,IAAU;AACtB,UAAM,CAACC,GAAD,EAAMC,GAAN,IAAaF,IAAI,CAACH,KAAL,CAAW,GAAX,CAAnB;AACA,UAAMM,OAAO,GAAGR,QAAQ,CAACS,IAAT,CAAeC,OAAD,IAAaA,OAAO,CAACC,IAAR,IAAgBJ,GAA3C,EAAgDK,QAAhE;AACAT,IAAAA,GAAG,GAAGA,GAAG,GAAGG,GAAG,GAAGE,OAAlB;AACD,GAJD;AAKA,SAAOL,GAAP;AACD,CAXD;;AAaA,eAAeL,cAAf","sourcesContent":["/*\r\ncalculateTotal is used for calculating the total cost that a member has to pay. \r\nThe function takes two arguments: expStr and products.\r\n\r\nexapmle:\r\nexpStr = \"1xA+2xB+3xC\"\r\nproducts = [{icon: \"A\", prdPrice: 10}, {icon: \"B\", prdPrice: 20}, {icon: \"C\", prdPrice: 30}]\r\n*/\r\n\r\nconst calculateTotal = (expStr, products) => {\r\n  debugger;\r\n  const items = expStr.split(\"+\");\r\n  let sum = 0;\r\n\r\n  items.forEach((item) => {\r\n    const [qty, prd] = item.split(\"x\");\r\n    const prdCost = products.find((product) => product.icon == prd).prdPrice;\r\n    sum = sum + qty * prdCost;\r\n  });\r\n  return sum;\r\n};\r\n\r\nexport default calculateTotal;\r\n"]},"metadata":{},"sourceType":"module"}