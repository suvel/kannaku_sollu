{"ast":null,"code":"import _slicedToArray from\"F:/JS Projects/client/kannaku_sollu/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext}from\"react\";import\"./Step3.scss\";import Table from\"./Table\";import Button from\"./Button\";import RefreshButton from\"./RefreshButton\";import{AppContext,reducerActTypes}from\"../context/AppProvider\";import calculateTotal from\"../functions/calculateTotal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Step3=function Step3(_ref){var toggleAddToBillModal=_ref.toggleAddToBillModal;var _useContext=useContext(AppContext),state=_useContext.state,dispatch=_useContext.dispatch,notify=_useContext.notify;var columns=React.useMemo(function(){return[{Header:\"MEMBER\",accessor:\"memName\"},{Header:\"PROD EXP\",accessor:\"prodExp\"},{Header:\"TOTAL\",accessor:\"total\"}];},[]);var notifyRemovedMembers=function notifyRemovedMembers(shares){var removedMemberNames=shares.map(function(share){return share.memName;});removedMemberNames.forEach(function(name){return notify(\"\".concat(name,\" removed\"));});};var handelBillingRefresh=function handelBillingRefresh(){var curMembers=state.members;var curProducts=state.products;var shares=state.shares;var newShares=[];var removedShare=[];var curMembersIds=curMembers.map(function(member){return member.id;});//removing unavailable members\nshares.forEach(function(share){if(curMembersIds.includes(share.memId)){newShares.push(share);}else{removedShare.push(share);}});//clearing unavailable products\nnewShares.forEach(function(share){var productExpString=share.prodExp;var productsInExp=productExpString.split(\"+\");var newProdExp=[];productsInExp.forEach(function(prod){var _prod$split=prod.split(\"x\"),_prod$split2=_slicedToArray(_prod$split,2),qty=_prod$split2[0],prd=_prod$split2[1];var prdExist=curProducts.find(function(prod){return prod.icon===prd;});if(prdExist){newProdExp.push(prod);}});share.prodExp=newProdExp.join(\"+\");share.total=calculateTotal(share.prodExp,curProducts);});if(removedShare&&removedShare.length>0){notifyRemovedMembers(removedShare);}dispatch({type:reducerActTypes.SET_SHARE,value:newShares});};return/*#__PURE__*/_jsxs(\"div\",{className:\"step3\",children:[/*#__PURE__*/_jsx(RefreshButton,{onClick:handelBillingRefresh}),/*#__PURE__*/_jsx(Table,{columns:columns,data:state===null||state===void 0?void 0:state.shares}),/*#__PURE__*/_jsx(\"div\",{className:\"step3__action\",children:/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return toggleAddToBillModal(true);},name:\"Add\",variant:\"solid\"})})]});};export default Step3;","map":{"version":3,"sources":["F:/JS Projects/client/kannaku_sollu/src/component/Step3.js"],"names":["React","useContext","Table","Button","RefreshButton","AppContext","reducerActTypes","calculateTotal","Step3","toggleAddToBillModal","state","dispatch","notify","columns","useMemo","Header","accessor","notifyRemovedMembers","shares","removedMemberNames","map","share","memName","forEach","name","handelBillingRefresh","curMembers","members","curProducts","products","newShares","removedShare","curMembersIds","member","id","includes","memId","push","productExpString","prodExp","productsInExp","split","newProdExp","prod","qty","prd","prdExist","find","icon","join","total","length","type","SET_SHARE","value"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./Step3.scss\";\r\nimport Table from \"./Table\";\r\nimport Button from \"./Button\";\r\nimport RefreshButton from \"./RefreshButton\";\r\nimport { AppContext, reducerActTypes } from \"../context/AppProvider\";\r\nimport calculateTotal from \"../functions/calculateTotal\";\r\n\r\nconst Step3 = ({ toggleAddToBillModal }) => {\r\n  const { state, dispatch, notify } = useContext(AppContext);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"MEMBER\",\r\n        accessor: \"memName\",\r\n      },\r\n      {\r\n        Header: \"PROD EXP\",\r\n        accessor: \"prodExp\",\r\n      },\r\n      {\r\n        Header: \"TOTAL\",\r\n        accessor: \"total\",\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const notifyRemovedMembers = (shares) => {\r\n    const removedMemberNames = shares.map((share) => share.memName);\r\n    removedMemberNames.forEach((name) => notify(`${name} removed`));\r\n  };\r\n\r\n  const handelBillingRefresh = () => {\r\n    const curMembers = state.members;\r\n    const curProducts = state.products;\r\n    const shares = state.shares;\r\n\r\n    let newShares = [];\r\n    let removedShare = [];\r\n\r\n    const curMembersIds = curMembers.map((member) => member.id);\r\n\r\n    //removing unavailable members\r\n    shares.forEach((share) => {\r\n      if (curMembersIds.includes(share.memId)) {\r\n        newShares.push(share);\r\n      } else {\r\n        removedShare.push(share);\r\n      }\r\n    });\r\n\r\n    //clearing unavailable products\r\n    newShares.forEach((share) => {\r\n      const productExpString = share.prodExp;\r\n      const productsInExp = productExpString.split(\"+\");\r\n\r\n      let newProdExp = [];\r\n\r\n      productsInExp.forEach((prod) => {\r\n        const [qty, prd] = prod.split(\"x\");\r\n        const prdExist = curProducts.find((prod) => prod.icon === prd);\r\n        if (prdExist) {\r\n          newProdExp.push(prod);\r\n        }\r\n      });\r\n\r\n      share.prodExp = newProdExp.join(\"+\");\r\n      share.total = calculateTotal(share.prodExp, curProducts);\r\n    });\r\n\r\n    if (removedShare && removedShare.length > 0) {\r\n      notifyRemovedMembers(removedShare);\r\n    }\r\n\r\n    dispatch({ type: reducerActTypes.SET_SHARE, value: newShares });\r\n  };\r\n\r\n  return (\r\n    <div className=\"step3\">\r\n      <RefreshButton onClick={handelBillingRefresh} />\r\n      <Table columns={columns} data={state?.shares} />\r\n      <div className=\"step3__action\">\r\n        <Button\r\n          onClick={() => toggleAddToBillModal(true)}\r\n          name={\"Add\"}\r\n          variant={\"solid\"}\r\n        />\r\n        {/* <Button name={\"Remove\"} variant={\"outlined\"} /> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Step3;\r\n"]},"metadata":{},"sourceType":"module"}