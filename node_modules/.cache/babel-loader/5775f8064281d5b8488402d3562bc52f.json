{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welcome\\\\Documents\\\\WEB DEV\\\\kannaku_sollu\\\\src\\\\component\\\\AddProductModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport Modal from './Modal';\nimport Button from './Button';\nimport './AddProductModal.scss';\nimport Form, { FormTitle, FormInputGroup, FormAction, Row, Col, FormInput } from './Form';\nimport { AppContext, reducerActTypes } from '../context/AppProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initFormData = {\n  icon: '',\n  prdName: '',\n  prdPrice: ''\n};\n\nconst AddProductModal = ({\n  show,\n  toggleShow\n}) => {\n  _s();\n\n  const {\n    state,\n    dispatch\n  } = useContext(AppContext);\n  const [formData, setFormData] = useState(initFormData);\n\n  const closeModal = () => {\n    toggleShow(false);\n    setFormData(initFormData);\n  };\n\n  const handelFormDataChange = (e, type) => {\n    const value = e.target.value;\n    setFormData(val => ({ ...val,\n      [type]: value\n    }));\n  };\n\n  const handelSubmit = () => {\n    const newProducts = [...state.products, formData];\n    dispatch({\n      type: reducerActTypes.SET_PRODUCT,\n      value: newProducts\n    });\n    closeModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-product-modal___container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"NAME\",\n                component: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: formData.name,\n                  onChange: e => {\n                    handelFormDataChange(e, 'prdName');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"ICON\",\n                component: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: formData.icon,\n                  onChange: e => {\n                    handelFormDataChange(e, 'icon');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(FormInput, {\n                label: \"PRICE\",\n                component: /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: formData.price,\n                  onChange: e => {\n                    handelFormDataChange(e, 'prdPrice');\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormAction, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handelSubmit,\n            name: \"Submit\",\n            variant: \"solid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => toggleShow(false),\n            name: \"Cancel\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddProductModal, \"VdtH5J9pBjtczEGoRKWc+7hy36o=\");\n\n_c = AddProductModal;\nexport default AddProductModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductModal\");","map":{"version":3,"sources":["C:/Users/Welcome/Documents/WEB DEV/kannaku_sollu/src/component/AddProductModal.js"],"names":["React","useState","useContext","Modal","Button","Form","FormTitle","FormInputGroup","FormAction","Row","Col","FormInput","AppContext","reducerActTypes","initFormData","icon","prdName","prdPrice","AddProductModal","show","toggleShow","state","dispatch","formData","setFormData","closeModal","handelFormDataChange","e","type","value","target","val","handelSubmit","newProducts","products","SET_PRODUCT","name","price"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,IACEC,SADF,EACaC,cADb,EAC6BC,UAD7B,EACyCC,GADzC,EAC8CC,GAD9C,EACmDC,SADnD,QACoE,QADpE;AAEA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,wBAA5C;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;;AAMA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAAA;;AAE9C,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBpB,UAAU,CAACU,UAAD,CAAtC;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAACa,YAAD,CAAxC;;AAEA,QAAMW,UAAU,GAAG,MAAM;AACrBL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,IAAAA,WAAW,CAACV,YAAD,CAAX;AACH,GAHD;;AAKA,QAAMY,oBAAoB,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACtC,UAAMC,KAAK,GAAGF,CAAC,CAACG,MAAF,CAASD,KAAvB;AACAL,IAAAA,WAAW,CAACO,GAAG,KAAK,EAAE,GAAGA,GAAL;AAAU,OAACH,IAAD,GAAQC;AAAlB,KAAL,CAAJ,CAAX;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAM;AACvB,UAAMC,WAAW,GAAG,CAAC,GAAGZ,KAAK,CAACa,QAAV,EAAoBX,QAApB,CAApB;AACAD,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAEf,eAAe,CAACsB,WAAxB;AAAqCN,MAAAA,KAAK,EAAEI;AAA5C,KAAD,CAAR;AACAR,IAAAA,UAAU;AACb,GAJD;;AAMA,sBACI,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,IAAb;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA,6BACI,QAAC,IAAD;AAAA,gCACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,cAAD;AAAA,kCACI,QAAC,GAAD;AAAA,mCACI,QAAC,GAAD;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAC,MADV;AAEI,gBAAA,SAAS,eACL;AACI,kBAAA,KAAK,EAAEI,QAAQ,CAACa,IADpB;AAEI,kBAAA,QAAQ,EAAET,CAAC,IAAI;AACXD,oBAAAA,oBAAoB,CAACC,CAAD,EAAI,SAAJ,CAApB;AACH;AAJL;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAgBI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAC,MADV;AAEI,gBAAA,SAAS,eACL;AACI,kBAAA,KAAK,EAAEJ,QAAQ,CAACR,IADpB;AAEI,kBAAA,QAAQ,EAAEY,CAAC,IAAI;AACXD,oBAAAA,oBAAoB,CAACC,CAAD,EAAI,MAAJ,CAApB;AACH;AAJL;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,GAAD;AAAA,qCACI,QAAC,SAAD;AACI,gBAAA,KAAK,EAAC,OADV;AAEI,gBAAA,SAAS,eACL;AACI,kBAAA,KAAK,EAAEJ,QAAQ,CAACc,KADpB;AAEI,kBAAA,QAAQ,EAAEV,CAAC,IAAI;AACXD,oBAAAA,oBAAoB,CAACC,CAAD,EAAI,UAAJ,CAApB;AACH;AAJL;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAgDI,QAAC,UAAD;AAAA,kCACI,QAAC,MAAD;AACI,YAAA,OAAO,EAAEK,YADb;AAEI,YAAA,IAAI,EAAE,QAFV;AAGI,YAAA,OAAO,EAAE;AAHb;AAAA;AAAA;AAAA;AAAA,kBADJ,eAMI,QAAC,MAAD;AACI,YAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC,KAAD,CAD7B;AAEI,YAAA,IAAI,EAAE,QAFV;AAGI,YAAA,OAAO,EAAE;AAHb;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmEH,CAzFD;;GAAMF,e;;KAAAA,e;AA2FN,eAAeA,eAAf","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport Modal from './Modal'\r\nimport Button from './Button'\r\nimport './AddProductModal.scss'\r\nimport Form,\r\n{ FormTitle, FormInputGroup, FormAction, Row, Col, FormInput } from './Form'\r\nimport { AppContext, reducerActTypes } from '../context/AppProvider'\r\n\r\nconst initFormData = {\r\n    icon: '',\r\n    prdName: '',\r\n    prdPrice: ''\r\n}\r\n\r\nconst AddProductModal = ({ show, toggleShow }) => {\r\n\r\n    const { state, dispatch } = useContext(AppContext);\r\n\r\n    const [formData, setFormData] = useState(initFormData);\r\n\r\n    const closeModal = () => {\r\n        toggleShow(false);\r\n        setFormData(initFormData);\r\n    }\r\n\r\n    const handelFormDataChange = (e, type) => {\r\n        const value = e.target.value;\r\n        setFormData(val => ({ ...val, [type]: value }))\r\n    }\r\n\r\n    const handelSubmit = () => {\r\n        const newProducts = [...state.products, formData]\r\n        dispatch({ type: reducerActTypes.SET_PRODUCT, value: newProducts });\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal show={show}>\r\n            <div className='add-product-modal___container'>\r\n                <Form>\r\n                    <FormTitle>\r\n                        Add Product\r\n                    </FormTitle>\r\n                    <FormInputGroup>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormInput\r\n                                    label='NAME'\r\n                                    component={\r\n                                        <input\r\n                                            value={formData.name}\r\n                                            onChange={e => {\r\n                                                handelFormDataChange(e, 'prdName')\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <FormInput\r\n                                    label='ICON'\r\n                                    component={\r\n                                        <input\r\n                                            value={formData.icon}\r\n                                            onChange={e => {\r\n                                                handelFormDataChange(e, 'icon')\r\n                                            }}\r\n                                        />\r\n                                    }\r\n                                />\r\n                            </Col>\r\n                            <Col>\r\n                                <FormInput\r\n                                    label='PRICE'\r\n                                    component={\r\n                                        <input\r\n                                            value={formData.price}\r\n                                            onChange={e => {\r\n                                                handelFormDataChange(e, 'prdPrice')\r\n                                            }}\r\n                                        />\r\n                                    } />\r\n                            </Col>\r\n                        </Row>\r\n                    </FormInputGroup>\r\n                    <FormAction>\r\n                        <Button\r\n                            onClick={handelSubmit}\r\n                            name={\"Submit\"}\r\n                            variant={\"solid\"}\r\n                        />\r\n                        <Button\r\n                            onClick={() => toggleShow(false)}\r\n                            name={\"Cancel\"}\r\n                            variant={\"outlined\"}\r\n                        />\r\n                    </FormAction>\r\n                </Form>\r\n            </div>\r\n        </Modal >\r\n    )\r\n}\r\n\r\nexport default AddProductModal\r\n"]},"metadata":{},"sourceType":"module"}